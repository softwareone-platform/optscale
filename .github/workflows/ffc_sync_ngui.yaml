name: Integrate ngui into ffc_ngui

on:
  pull_request:
    types: [closed]
  workflow_dispatch:  # Manual trigger option


jobs:
  sync-ffc-ngui:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get latest commit SHA for main
        id: latest_commit
        run: |
          LATEST_COMMIT=$(git rev-parse --short=7 main)
          echo "LATEST_COMMIT=$LATEST_COMMIT" >> $GITHUB_OUTPUT

      - name: Check if branch exist
        id: check_branch_main
        run: |
          if git ls-remote --heads origin ngui-sync-${{ steps.latest_commit.outputs.LATEST_COMMIT }} | grep ngui-sync-${{ steps.latest_commit.outputs.LATEST_COMMIT }}; then
            echo "Branch ngui-sync-${{ steps.latest_commit.outputs.LATEST_COMMIT }} already exists. Skipping..."
            echo "branch_exists=yes" >> "$GITHUB_OUTPUT"
          fi

      - name: Create new branch from latest tag for main
        if: steps.check_branch_main.outputs.branch_exists != 'yes' && (github.event_name == 'workflow_dispatch' || (github.event.pull_request.merged && startsWith(github.event.pull_request.head.ref, 'sync-')))
        run: |
          git checkout -b ngui-sync-${{ steps.latest_commit.outputs.LATEST_COMMIT }} ${{ steps.latest_commit.outputs.LATEST_COMMIT }}
          diff -ruN ffc_ngui/ ngui/ | patch -p1 -d ffc_ngui/
          git add ffc_ngui/
          git commit -am "Sync ngui with ffc_ngui (${{ steps.latest_commit.outputs.LATEST_COMMIT }})"
          git push origin ngui-sync-${{ steps.latest_commit.outputs.LATEST_COMMIT }}

      - name: Check if PR exists
        id: check_pr
        if: steps.check_branch_main.outputs.branch_exists != 'yes' && (github.event_name == 'workflow_dispatch' || (github.event.pull_request.merged && startsWith(github.event.pull_request.head.ref, 'sync-')))
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          prs=$(gh pr list \
              --repo "$GITHUB_REPOSITORY" \
              --head 'ngui-sync-${{ steps.latest_commit.outputs.LATEST_COMMIT }}' \
              --base 'main' \
              --json title \
              --jq 'length')
          if ((prs > 0)); then
              echo "pr_exists=yes" >> "$GITHUB_OUTPUT"
              echo "::notice::Pull Request exist."
          else
              echo "pr_exists=no" >> "$GITHUB_OUTPUT"
          fi

      - name: Get current date
        id: current_date
        run: echo "date=$(date +'%Y-%m-%d')" >> "$GITHUB_OUTPUT"

      - name: Create Pull Request for Main
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: steps.check_pr.outputs.pr_exists == 'no'
        run: |
          gh pr create \
              --repo "$GITHUB_REPOSITORY" \
              --head 'ngui-sync-${{ steps.latest_commit.outputs.LATEST_COMMIT }}' \
              --base 'main' \
              --title 'Integrate changes from ngui into ffc_ngui (${{ steps.latest_commit.outputs.LATEST_COMMIT }}) ${{ steps.current_date.outputs.date }}' \
              --body "This PR integrates the latest changes from ngui into ffc_ngui."
