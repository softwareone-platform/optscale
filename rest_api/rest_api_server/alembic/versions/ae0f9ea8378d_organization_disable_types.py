"""organization_disable_types

Revision ID: ae0f9ea8378d
Revises: dac58c979087
Create Date: 2025-04-18 06:46:46.594270

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import select, update, true
from sqlalchemy.orm import Session
from sqlalchemy.sql import table, column

# revision identifiers, used by Alembic.
revision = 'ae0f9ea8378d'
down_revision = 'dac58c979087'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    session = Session(bind=bind)
    try:
        org_t = table('organization',
                      column('id', sa.String(36)),
                      column('disabled', sa.Boolean()))
        cmd = select([org_t.c.id]).where(org_t.c.disabled.is_(True))
        disabled_organization_ids = [org['id'] for org in session.execute(cmd)]
        op.drop_column('organization', 'disabled')
        op.add_column('organization',
                      sa.Column('disabled', sa.Enum(
                          'SOFT', 'HARD'), nullable=True))
        org_t = table('organization',
                      column('id', sa.String(36)),
                      column('disabled', sa.String(36)))
        upd_stmt = update(org_t).values(
            disabled='HARD'
        ).where(org_t.c.id.in_(disabled_organization_ids))
        session.execute(upd_stmt)
    except Exception:
        session.rollback()
        raise
    finally:
        session.close()
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    session = Session(bind=bind)
    try:
        org_t = table('organization',
                      column('id', sa.String(36)),
                      column('disabled', sa.String(36)))
        cmd = select([org_t.c.id]).where(org_t.c.disabled.isnot(None))
        disabled_organization_ids = [org['id'] for org in session.execute(cmd)]
        op.drop_column('organization', 'disabled')
        op.add_column('organization',
                      sa.Column('disabled', sa.Boolean(), nullable=False,
                                default=False))
        org_t = table('organization',
                      column('id', sa.String(36)),
                      column('disabled', sa.Boolean()))
        upd_stmt = update(org_t).values(
            disabled=true()
        ).where(org_t.c.id.in_(disabled_organization_ids))
        session.execute(upd_stmt)
    except Exception:
        session.rollback()
        raise
    finally:
        session.close()
    # ### end Alembic commands ###
