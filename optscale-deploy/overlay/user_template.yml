# secret should be permanent for cluster installation
# change it before cluster installation
secrets:
  cluster: fc83d31-461d-44c5-b4d5-41a32d6c36a1

# service credentials for getting pricing information from the different clouds
# recommendations will not work without this
service_credentials:
  aws:
    access_key_id: accesskeyid
    secret_access_key: secretaccesskey
  azure:
    client_id: clientid
    tenant: tenant
    secret: secret
    subscription_id: subscriptionid
  alibaba:
    access_key_id: accesskeyid
    secret_access_key: secretaccesskey
  gcp:
    credentials:
      # You'll need a service account with the following permissions to the
      # project where you set up pricing data export:
      # - bigquery.jobs.create
      # - bigquery.tables.getData
      # - compute.machineTypes.list
      type: service_account
      project_id: yourprojectid
      private_key_id: yourprivatekeyid
      private_key: |
        -----BEGIN PRIVATE KEY-----
        -----END PRIVATE KEY-----
      client_email: optscale-service-credentials@yourproject.iam.gserviceaccount.com
      client_id: "111111111"
      auth_uri: https://accounts.google.com/o/oauth2/auth
      token_uri: https://oauth2.googleapis.com/token
      auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs
      client_x509_cert_url: >-
        https://www.googleapis.com/robot/v1/metadata/x509/optscale-service-credentials%40yourproject.iam.gserviceaccount.com
    # See https://cloud.google.com/billing/docs/how-to/export-data-bigquery-tables#pricing-data-schema
    # for setting up pricing data export
    pricing_data:
      dataset_name: pricing_dataset
      table_name: cloud_pricing_export
    project_id: yourprojectid

#  encryption salt for encode user information
encryption_salt: my~encypt10n~s@lt

# SMTP server and credentials used for sending emails
smtp:
  server:
  email:
  login:
  port:
  password:
  protocol:

# Slack application credentials
slacker:
  slack_signing_secret:
  slack_client_id:
  slack_client_secret:

# google calendar service settings - used for IT Environments booking
# integration with Google Calendar
google_calendar_service:
  access_key:
    type: service_account
    project_id: optscale
    private_key_id: eeee000
    private_key: |
      -----BEGIN PRIVATE KEY-----
      -----END PRIVATE KEY-----
    client_email: calendar-service@optscale.iam.gserviceaccount.com
    client_id: ""
    auth_uri: https://accounts.google.com/o/oauth2/auth
    token_uri: https://oauth2.googleapis.com/token
    auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs
    client_x509_cert_url: https://www.googleapis.com/robot/v1/metadata/x509/calendar-service@optscale.iam.gserviceaccount.com

#  encryption key
encryption_key: fffffxdddeadb33f

# This overlay should be used for all non-production environments (?)
# - https://console.developers.google.com/ to see registered origins for the Google OAuth client"
# - https://portal.azure.com/ to see registered origins for the Microsoft OAuth client"
auth:
  google_oauth_client_id: ""
  google_oauth_client_secret: ""
  microsoft_oauth_client_id: ""

ngui:
  env:
    build_mode: ""
    google_oauth_client_id: ""
    microsoft_oauth_client_id: ""
    google_map_api_key: ""
    ganalytics_id: ""
    hotjar_id: ""

elk:
  env:
    htpasswd_user: userforelk
    htpasswd_pass: passwordforelk

grafana:
  env:
    htpasswd_user: userforgrafana
    htpasswd_pass: passwordforgrafana

# Public ip of OptScale VM used in external integrations like emails,
# google calendar etc. Defaults to internal ip, change it if internal ip
# is not accessible in your network
public_ip:
