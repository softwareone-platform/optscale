diff --git a/ngui/package.json b/ngui/package.json
index 76acef0b..d22bd689 100644
--- a/ngui/package.json
+++ b/ngui/package.json
@@ -43,6 +43,5 @@
     "prettier": "3.3.3",
     "typescript": "5.7.2",
     "typescript-eslint": "8.41.0"
-  },
-  "packageManager": "pnpm@10.12.1+sha512.f0dda8580f0ee9481c5c79a1d927b9164f2c478e90992ad268bbb2465a736984391d6333d2c327913578b2804af33474ca554ba29c04a8b13060a717675ae3ac"
+  }
 }
diff --git a/ngui/ui/src/components/forms/ConnectCloudAccountForm/ConnectCloudAccountForm.tsx b/ngui/ui/src/components/forms/ConnectCloudAccountForm/ConnectCloudAccountForm.tsx
index 3af9aabe..4d67a981 100644
--- a/ngui/ui/src/components/forms/ConnectCloudAccountForm/ConnectCloudAccountForm.tsx
+++ b/ngui/ui/src/components/forms/ConnectCloudAccountForm/ConnectCloudAccountForm.tsx
@@ -614,7 +614,7 @@ const ConnectCloudAccountForm = ({ onSubmit, onCancel, isLoading = false, showCa
       icon: AwsLogoIcon,
       messageId: "aws",
       dataTestId: "btn_aws_account",
-      action: () => setConnectionType(CONNECTION_TYPES.AWS_MANAGEMENT)
+      action: () => setConnectionType(CONNECTION_TYPES.AWS_MEMBER)
     },
     {
       id: CLOUD_PROVIDERS.AZURE,
@@ -694,7 +694,6 @@ const ConnectCloudAccountForm = ({ onSubmit, onCancel, isLoading = false, showCa
               .map((subtype) => ({
                 id: subtype.connectionType,
                 messageId: subtype.messageId,
-                dataTestId: `btn_${subtype.messageId}`,
                 action: () => setConnectionType(subtype.connectionType)
               }))}
             activeButtonId={connectionType}
diff --git a/ngui/ui/src/components/forms/ConnectCloudAccountForm/FormElements/Aws/components/AwsDescription.tsx b/ngui/ui/src/components/forms/ConnectCloudAccountForm/FormElements/Aws/components/AwsDescription.tsx
index 3b42b624..b91e0e00 100644
--- a/ngui/ui/src/components/forms/ConnectCloudAccountForm/FormElements/Aws/components/AwsDescription.tsx
+++ b/ngui/ui/src/components/forms/ConnectCloudAccountForm/FormElements/Aws/components/AwsDescription.tsx
@@ -30,7 +30,6 @@ export const AuthenticationTypeSelector = ({ authenticationType, setAuthenticati
       buttons={authenticationTypes.map((subtype) => ({
         id: subtype.authenticationType,
         messageId: subtype.messageId,
-        dataTestId: `btn_${subtype.messageId}`,
         action: () => setAuthenticationType(subtype.authenticationType)
       }))}
       activeButtonId={authenticationType}
diff --git a/ngui/ui/src/translations/Translation.test.ts b/ngui/ui/src/translations/Translation.test.ts
index adb6a09d..fa7ef69c 100644
--- a/ngui/ui/src/translations/Translation.test.ts
+++ b/ngui/ui/src/translations/Translation.test.ts
@@ -1,4 +1,4 @@
-import defaultJson from "translations/en-US/appOverride.json";
+import defaultJson from "translations/en-US/app.json";
 import errors from "translations/en-US/errors.json";
 
 test("en translation file sorted alphabetically", () => {
diff --git a/ngui/ui/src/translations/en-US/app.json b/ngui/ui/src/translations/en-US/app.json
index 066ce9c8..0302d4f7 100644
--- a/ngui/ui/src/translations/en-US/app.json
+++ b/ngui/ui/src/translations/en-US/app.json
@@ -812,8 +812,6 @@
   "fieldLessThanOrEqualToField": "{fieldName1} must be less than or equal to {fieldName2}",
   "fieldMoreThanOrEqualToField": "{fieldName1} must be more than or equal to {fieldName2}",
   "fieldMustBeANumber": "This field must be a number",
-  "fileDownloadingErrorHeader": "Download falied",
-  "fileDownloadingErrorMessage": "The amount of data is too large to export. Please filter your resources before downloading.",
   "fileIsTooBig": "File is too big.",
   "fileTypeNotSupported": "File type is not supported.",
   "fileWasRejected": "File was rejected.",
