[project]
name = "db"
version = "0.1.0"
description = "Tools for database operations such as creating and applying migrations"
authors = [{ name = "Hystax", email = "info@hystax.com" }]
requires-python = ">=3.12"
dependencies = [
    "pymongo>=4.6.3,<5.0",
    "mongodb-migrations>=0.7.0",
    "typer>=0.19.2",
    "clickhouse-connect>=0.8.15",
]

[build-system]
requires = ["uv_build>=0.8.17,<0.9.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "pytest>=8.4.2",
    "ruff>=0.13.1",
]

# TODO: This is mostly duplicated from herald/pyproject.toml, consider centralizing it
[tool.ruff]
line-length = 120
target-version = "py312"
output-format = "full"

[tool.ruff.lint]
preview = true
select = [
    "E",   # w errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade,
    "PT",  # flake8-pytest-style
    "T10", # flake8-pytest-style
]
ignore = [
    "PT001", # Use `@pytest.fixture()` over `@pytest.fixture`
    "PT009", # Use a regular `assert` instead of unittest-style `assertEqual`
    "PT011", # pytest.raises({exception}) is too broad, set the match parameter or use a more specific exception
    "PT023", # @pytest.mark.parametrize` is missing required arguments
    "B008",  # do not perform function calls in argument defaults
    "B904",  # Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling,
    "UP031", # Use format specifiers instead of percent format
]

[tool.ruff.format]
preview = true
quote-style = "double"
docstring-code-format = true
