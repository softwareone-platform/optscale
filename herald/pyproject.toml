[tool.pytest.ini_options]
testpaths = [
    "herald/herald_server/tests",
    "herald/modules/tests/"
]
pythonpath = "."
addopts = "--cov=herald --cov-report=term-missing:skip-covered"

[tool.coverage.run]
branch = true
source = ["herald"]
omit = [
    "herald/modules/tests/*.py",
    "herald/modules/tests/email_generator/*.py",
]
relative_files = true

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "pragma: no branch",
    "NotImplementedError",
]

[tool.ruff]
line-length = 120
target-version = "py312"
output-format = "full"
extend-exclude = [
    "send_templates.py",
]

[tool.ruff.lint]
preview = true
select = [
    "E",  # w errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade,
    "PT",  # flake8-pytest-style
    "T10",  # flake8-pytest-style
]
ignore = [
    "PT001", # Use `@pytest.fixture()` over `@pytest.fixture`
    "PT009", # Use a regular `assert` instead of unittest-style `assertEqual`
    "PT011", # pytest.raises({exception}) is too broad, set the match parameter or use a more specific exception
    "PT023", # @pytest.mark.parametrize` is missing required arguments
    "B008",  # do not perform function calls in argument defaults
    "B904",  # Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling,
    "UP031", # Use format specifiers instead of percent format
]

[tool.ruff.format]
preview = true
quote-style = "double"
docstring-code-format = true